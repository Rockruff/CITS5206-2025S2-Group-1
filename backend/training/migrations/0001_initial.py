# Generated by Django 5.2.5 on 2025-08-14 08:06

import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("importing", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=160, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=32, unique=True)),
                ("title", models.CharField(max_length=160)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120)),
                ("slug", models.SlugField(max_length=140, unique=True)),
                (
                    "scope",
                    models.CharField(
                        choices=[
                            ("training", "Training"),
                            ("user", "User"),
                            ("both", "Both"),
                        ],
                        default="training",
                        max_length=10,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["scope", "active"], name="training_ca_scope_cf8c7e_idx"
                    )
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("name", "scope"), name="uq_category_name_scope"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("external_id", models.CharField(blank=True, max_length=64, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("first_name", models.CharField(blank=True, max_length=120)),
                ("last_name", models.CharField(blank=True, max_length=120)),
                (
                    "person_type",
                    models.CharField(
                        choices=[
                            ("staff", "Staff"),
                            ("student", "Student"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=10,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="people",
                        to="training.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Training",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=50, unique=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "expiry_mode",
                    models.CharField(
                        choices=[
                            ("none", "No expiry"),
                            ("fixed_days", "Fixed days from completion"),
                            ("per_record", "Stored per record"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "default_expiry_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="trainings", to="training.category"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CategoryTrainingRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("required", models.BooleanField(default=True)),
                ("frequency_days", models.PositiveIntegerField(blank=True, null=True)),
                ("valid_if_any_in_group", models.CharField(blank=True, max_length=64)),
                (
                    "grace_period_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_requirements",
                        to="training.category",
                    ),
                ),
                (
                    "training",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_requirements",
                        to="training.training",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainingEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("start_at", models.DateTimeField()),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=200)),
                (
                    "external_system",
                    models.CharField(
                        blank=True,
                        choices=[("trybooking", "TryBooking")],
                        max_length=20,
                    ),
                ),
                ("external_event_id", models.CharField(blank=True, max_length=64)),
                ("external_url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "training",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="training.training",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainingAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("registered", "Registered"),
                            ("checked_in", "Checked in"),
                            ("no_show", "No show"),
                        ],
                        default="registered",
                        max_length=20,
                    ),
                ),
                ("checked_in_at", models.DateTimeField(blank=True, null=True)),
                ("source", models.CharField(default="manual", max_length=20)),
                ("evidence", models.JSONField(blank=True, null=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to="training.person",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to="training.trainingevent",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainingFieldDef",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.SlugField(max_length=64)),
                ("label", models.CharField(max_length=120)),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("number", "Number"),
                            ("date", "Date"),
                            ("boolean", "Boolean"),
                            ("select", "Select"),
                            ("json", "JSON"),
                        ],
                        default="text",
                        max_length=10,
                    ),
                ),
                ("required", models.BooleanField(default=False)),
                ("options", models.JSONField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "training",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="field_defs",
                        to="training.training",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainingRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("expiry_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("valid", "Valid"),
                            ("expired", "Expired"),
                            ("revoked", "Revoked"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("lms", "LMS"),
                            ("trybooking", "TryBooking"),
                            ("bulk_upload", "Bulk upload"),
                            ("manual", "Manual"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("evidence", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "import_row",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_training_records",
                        to="importing.importrow",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_records",
                        to="training.person",
                    ),
                ),
                (
                    "training",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="records",
                        to="training.training",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainingRecordFieldValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value_text", models.TextField(blank=True, null=True)),
                (
                    "value_number",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                ("value_date", models.DateField(blank=True, null=True)),
                ("value_boolean", models.BooleanField(blank=True, null=True)),
                ("value_json", models.JSONField(blank=True, null=True)),
                (
                    "field_def",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="values",
                        to="training.trainingfielddef",
                    ),
                ),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="field_values",
                        to="training.trainingrecord",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user_members",
                        to="training.category",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="training.person",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="position_history",
                        to="training.person",
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="holders",
                        to="training.position",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="person",
            index=models.Index(
                fields=["external_id"], name="training_pe_externa_6c20c1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="person",
            index=models.Index(
                django.db.models.functions.text.Lower("email"),
                name="idx_person_email_lower",
            ),
        ),
        migrations.AddConstraint(
            model_name="person",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("email"),
                condition=models.Q(("email__isnull", True), _negated=True),
                name="uq_person_email_lower",
            ),
        ),
        migrations.AddConstraint(
            model_name="person",
            constraint=models.UniqueConstraint(
                condition=models.Q(("external_id__isnull", True), _negated=True),
                fields=("external_id",),
                name="uq_person_external_id",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="categorytrainingrequirement",
            unique_together={("category", "training")},
        ),
        migrations.AddIndex(
            model_name="trainingattendance",
            index=models.Index(
                fields=["status", "event"], name="training_tr_status_820c05_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="trainingattendance",
            unique_together={("event", "person")},
        ),
        migrations.AddConstraint(
            model_name="trainingfielddef",
            constraint=models.UniqueConstraint(
                fields=("training", "key"), name="uq_fielddef_training_key"
            ),
        ),
        migrations.AddIndex(
            model_name="trainingrecord",
            index=models.Index(
                fields=["person", "training"], name="training_tr_person__5a7e98_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trainingrecord",
            index=models.Index(fields=["status"], name="training_tr_status_67d69a_idx"),
        ),
        migrations.AddIndex(
            model_name="trainingrecord",
            index=models.Index(
                fields=["expiry_at"], name="training_tr_expiry__09fcfa_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="trainingrecordfieldvalue",
            constraint=models.UniqueConstraint(
                fields=("record", "field_def"), name="uq_record_fielddef"
            ),
        ),
        migrations.AddConstraint(
            model_name="trainingrecordfieldvalue",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("value_text__isnull", False),
                    ("value_number__isnull", False),
                    ("value_date__isnull", False),
                    ("value_boolean__isnull", False),
                    ("value_json__isnull", False),
                    _connector="OR",
                ),
                name="ck_fieldvalue_has_value",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="usercategory",
            unique_together={("person", "category")},
        ),
        migrations.AddIndex(
            model_name="userposition",
            index=models.Index(
                fields=["person", "start_date"], name="training_us_person__b09719_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userposition",
            unique_together={("person", "position", "start_date")},
        ),
    ]
