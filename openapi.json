openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/trainings/:
    get:
      operationId: trainings_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - trainings
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrainingList'
          description: ''
    post:
      operationId: trainings_create
      tags:
      - trainings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Training'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Training'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Training'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: ''
  /api/trainings/{id}/:
    get:
      operationId: trainings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training.
        required: true
      tags:
      - trainings
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: ''
    put:
      operationId: trainings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training.
        required: true
      tags:
      - trainings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Training'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Training'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Training'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: ''
    patch:
      operationId: trainings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training.
        required: true
      tags:
      - trainings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTraining'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTraining'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTraining'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: ''
    delete:
      operationId: trainings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training.
        required: true
      tags:
      - trainings
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/trainings/{id}/groups/:
    get:
      operationId: trainings_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training.
        required: true
      tags:
      - trainings
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: ''
  /api/trainings/{id}/groups:link/:
    post:
      operationId: trainings_groups:link_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training.
        required: true
      tags:
      - trainings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Training'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Training'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Training'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: ''
  /api/trainings/{id}/groups:unlink/:
    post:
      operationId: trainings_groups:unlink_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training.
        required: true
      tags:
      - trainings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Training'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Training'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Training'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: ''
  /api/user-groups/:
    get:
      operationId: user_groups_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - user-groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserGroupList'
          description: ''
    post:
      operationId: user_groups_create
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/user-groups/{id}/:
    get:
      operationId: user_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user group.
        required: true
      tags:
      - user-groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    put:
      operationId: user_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user group.
        required: true
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    patch:
      operationId: user_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user group.
        required: true
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    delete:
      operationId: user_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user group.
        required: true
      tags:
      - user-groups
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/user-groups/{id}/members/:
    get:
      operationId: user_groups_members_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user group.
        required: true
      tags:
      - user-groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/user-groups/{id}/members:add/:
    post:
      operationId: user_groups_members:add_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user group.
        required: true
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/user-groups/{id}/members:remove/:
    post:
      operationId: user_groups_members:remove_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user group.
        required: true
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{id}/set-role/:
    patch:
      operationId: users_set_role_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleUpdate'
          description: ''
  /api/users/batch/:
    post:
      operationId: users_batch_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/merge/:
    post:
      operationId: users_merge_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    PaginatedTrainingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Training'
    PaginatedUserGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedTraining:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        ttype:
          $ref: '#/components/schemas/TtypeEnum'
        completion_score:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        proof_fields:
          nullable: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        full_name:
          type: string
          maxLength: 160
        uwa_id:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
    PatchedUserGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 120
        members_count:
          type: integer
          readOnly: true
    PatchedUserRoleUpdate:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
    RoleEnum:
      enum:
      - ADMIN
      - MANAGER
      - VIEWER
      type: string
      description: |-
        * `ADMIN` - Admin
        * `MANAGER` - Manager
        * `VIEWER` - Viewer
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Training:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        ttype:
          $ref: '#/components/schemas/TtypeEnum'
        completion_score:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        proof_fields:
          nullable: true
      required:
      - id
      - name
      - ttype
    TtypeEnum:
      enum:
      - LMS
      - EXTERNAL
      type: string
      description: |-
        * `LMS` - LMS
        * `EXTERNAL` - External
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        full_name:
          type: string
          maxLength: 160
        uwa_id:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - full_name
      - id
      - username
      - uwa_id
    UserCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        full_name:
          type: string
          maxLength: 160
        uwa_id:
          type: string
          maxLength: 32
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
      required:
      - full_name
      - id
      - password
      - role
      - username
      - uwa_id
    UserGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 120
        members_count:
          type: integer
          readOnly: true
      required:
      - id
      - members_count
      - name
    UserRoleUpdate:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
